plugins {
    id 'com.gradle.build-scan' version '3.0'
    id 'groovy'
    id 'jacoco'
    id 'project-report'
    id 'ru.vyarus.java-lib' version '1.1.2'
    id 'ru.vyarus.github-info' version '1.1.0'<% if (enableQualityChecks) { %><% if (animalsnifferSignature) { %>
    id 'ru.vyarus.animalsniffer' version '1.5.0'<% } %>
    id 'ru.vyarus.quality' version '3.4.0'<% } %>
    id 'com.jfrog.bintray' version '1.8.4'
    id 'net.researchgate.release' version '2.8.1'
    id 'com.github.ben-manes.versions' version '0.27.0'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

sourceCompatibility = <%= targetJava %>

wrapper {
    gradleVersion = '5.6.3'
}

repositories { jcenter(); mavenCentral(); mavenLocal() }
// Use for BOM declaration
//dependencyManagement {
//    imports {
//        mavenBom "group:artifact:version"
//    }
//}
dependencies {
    <% if (animalsnifferSignature) { %>signature '<%= animalsnifferSignature %>'

    <% } %>provided 'com.github.spotbugs:spotbugs-annotations:3.1.2'

    compile 'org.slf4j:slf4j-api:1.7.28'

    testCompile 'ch.qos.logback:logback-classic:1.2.3'
    testCompile 'org.slf4j:jul-to-slf4j:1.7.28'
    testCompile 'org.spockframework:spock-core:1.2-groovy-2.5'
}

group = '<%= libGroup %>'
description = '<%= libDesc %>'

github {
    user = '<%= githubUser %>'
    license = 'MIT'
}

pom {
    developers {
        developer {
            id '<%= githubUser %>'
            name '<%= authorName %>'
            email '<%= authorEmail %>'
        }
    }
}

bintray {
    user = findProperty('bintrayUser')
    key = findProperty('bintrayKey')
    publications = ['maven']
    dryRun = false
    publish = true
    pkg {
        repo = '<%= bintrayRepo %>'
        name = project.name
        desc = project.description
        labels = [<%- libTags %>]
        publicDownloadNumbers = true
        version {
            gpg {
                sign = <%= bintraySignFiles %>
                passphrase = findProperty('gpgPassphrase')
            }
            mavenCentralSync {
                sync = <%= mavenCentralSync %>
                user = findProperty('sonatypeUser')
                password = findProperty('sonatypePassword')
            }
        }
    }
}

afterReleaseBuild {
    dependsOn = [bintrayUpload]
    doLast {
        logger.warn "RELEASED $project.group:$project.name:$project.version"
    }
}

test {
    testLogging {
        events 'skipped', 'failed', 'standard_error'
        exceptionFormat 'full'
    }
    maxHeapSize = '512m'
}

dependencyUpdates.revision = 'release'
jacocoTestReport.reports.xml.enabled = true


task showDependenciesTree(dependsOn: 'htmlDependencyReport', group: 'help', description:
        'Generates dependencies tree report and opens it in browser') {
    doLast {
        java.awt.Desktop.getDesktop().open(file('build/reports/project/dependencies/root.html'))
    }
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
    publishOnFailure()
}
