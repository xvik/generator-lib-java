plugins {
    id 'groovy'
    id 'jacoco'
    id 'project-report'
    id 'signing'
    id 'ru.vyarus.java-lib' version '2.2.0-SNAPSHOT'
    id 'ru.vyarus.github-info' version '1.2.0'<% if (enableQualityChecks) { %>
    id 'ru.vyarus.quality' version '4.6.0'<% } %>
    id 'net.researchgate.release' version '2.8.1'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
    id 'com.github.ben-manes.versions' version '0.39.0'
}

sourceCompatibility = 1.8

wrapper {
    gradleVersion = '6.9'
}

ext {
    groovy = '2.5.14'
    slf4j = '1.7.30'
}

repositories { mavenLocal(); mavenCentral() }
dependencies {
    // BOMs usage
    // implementation platform('dependency:address')

    compileOnly 'com.github.spotbugs:spotbugs-annotations:4.2.3'

    implementation "org.slf4j:slf4j-api:$slf4j"

    testImplementation 'ch.qos.logback:logback-classic:1.2.3'
    testImplementation "org.slf4j:jul-to-slf4j:$slf4j"
    testImplementation 'org.spockframework:spock-core:2.0-groovy-3.0'
}

group = '<%= libGroup %>'
description = '<%= libDesc %>'

github {
    user = '<%= githubUser %>'
    license = 'MIT'
}

pom {
    developers {
        developer {
            id '<%= githubUser %>'
            name '<%= authorName %>'
            email '<%= authorEmail %>'
        }
    }
}

javaLib {
    // java 11 auto module name
    autoModuleName = "$project.group.$project.name"
    // don't publish gradle metadata artifact
    disableGradleMetadata()
    // use only direct dependencies in the generated pom, removing BOM mentions
    pom.removeDependencyManagement()
    // artifacts signed only on release
    // https://docs.gradle.org/current/userguide/signing_plugin.html#sec:signatory_credentials
    // enableSnapshotsSigning()
}

nexusPublishing {
    repositories {
        sonatype {
            username = findProperty('sonatypeUser')
            password = findProperty('sonatypePassword')
        }
    }
}

afterReleaseBuild {
    dependsOn = ['publishToSonatype',
                 'closeAndReleaseSonatypeStagingRepository']
    doLast {
        logger.warn "RELEASED $project.group:$project.name:$project.version"
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events 'skipped', 'failed'
        exceptionFormat 'full'
    }
    maxHeapSize = '512m'
}

dependencyUpdates.revision = 'release'
