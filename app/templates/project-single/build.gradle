plugins {
    id 'groovy'
    id 'jacoco'
    id 'project-report'
    id 'signing'
    id 'ru.vyarus.java-lib' version '2.1.0'
    id 'ru.vyarus.github-info' version '1.2.0'<% if (enableQualityChecks) { %>
    id 'ru.vyarus.quality' version '4.6.0'<% } %>
    id 'net.researchgate.release' version '2.8.1'
    id 'com.github.ben-manes.versions' version '0.38.0'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

sourceCompatibility = 1.8

wrapper {
    gradleVersion = '6.9'
}

ext {
    groovy = '2.5.7'
    slf4j = '1.7.28'
}

repositories { mavenCentral(); mavenLocal() }
dependencyManagement {
    // Use for BOM declaration
//    imports {
//        mavenBom "group:artifact:version"
//    }
    dependencies {
        dependency 'org.spockframework:spock-core:1.3-groovy-2.5'
        // groovy bundled with spock (2.5.2) does not work well with java 11
        dependency "org.codehaus.groovy:groovy:$groovy"
        dependency "org.codehaus.groovy:groovy-json:$groovy"
        dependency "org.codehaus.groovy:groovy-macro:$groovy"
        dependency "org.codehaus.groovy:groovy-nio:$groovy"
        dependency "org.codehaus.groovy:groovy-sql:$groovy"
        dependency "org.codehaus.groovy:groovy-templates:$groovy"
        dependency "org.codehaus.groovy:groovy-test:$groovy"
        dependency "org.codehaus.groovy:groovy-xml:$groovy"

        dependency "org.slf4j:slf4j-api:$slf4j"
    }
}
dependencies {
    compileOnly 'com.github.spotbugs:spotbugs-annotations:3.1.2'

    implementation 'org.slf4j:slf4j-api'

    testImplementation 'ch.qos.logback:logback-classic:1.2.3'
    testImplementation "org.slf4j:jul-to-slf4j:$slf4j"
    testImplementation 'org.spockframework:spock-core'
}

group = '<%= libGroup %>'
description = '<%= libDesc %>'

github {
    user = '<%= githubUser %>'
    license = 'MIT'
}

pom {
    developers {
        developer {
            id '<%= githubUser %>'
            name '<%= authorName %>'
            email '<%= authorEmail %>'
        }
    }
}

// java 11 auto module name
jar {
    manifest {
        attributes 'Automatic-Module-Name': "$project.group.$project.name"
    }
}

nexusPublishing {
    repositories {
        sonatype {
            username = findProperty('sonatypeUser')
            password = findProperty('sonatypePassword')
        }
    }
}

signing {
    // https://docs.gradle.org/current/userguide/signing_plugin.html#sec:signatory_credentials
    sign publishing.publications.maven
}

tasks.withType(Sign).configureEach {
    onlyIf { !version.endsWith("SNAPSHOT") }
}

// disable gradle metadata publishing (because it confuse a lot)
tasks.withType(GenerateModuleMetadata).configureEach {
    enabled = false
}

afterReleaseBuild {
    dependsOn = ['publishToSonatype',
                 'closeAndReleaseSonatypeStagingRepository']
    doLast {
        logger.warn "RELEASED $project.group:$project.name:$project.version"
    }
}

test {
    testLogging {
        events 'skipped', 'failed'
        exceptionFormat 'full'
    }
    maxHeapSize = '512m'
}

dependencyUpdates.revision = 'release'
jacocoTestReport.reports.xml.enabled = true


task showDependenciesTree(dependsOn: 'htmlDependencyReport', group: 'help', description:
        'Generates dependencies tree report and opens it in browser') {
    doLast {
        java.awt.Desktop.getDesktop().open(file('build/reports/project/dependencies/root.html'))
    }
}
